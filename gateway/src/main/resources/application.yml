
spring:
  application:
    name: gateway
  http:
    encoding:
      charset: utf-8
      enabled: true
      force: true
server:
  port: 20001
eureka:
  client:
    service-url:
      defaultZone:  http://localhost:20000/eureka/
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}   #
management:
  endpoints:
    web:
      exposure:
        include: refresh,health,info,env
feign:
  hystrix:
    enabled: true    # 根据测试发现 这个需要设置为true 并控制  hystrix 时间 否则如果为false  1s就hystrix超时

hystrix:
  command:
    default:  #default全局有效，service id指定应用有效
      execution:
        timeout:
          #如果enabled设置为false，则请求超时交给ribbon控制,为true,则超时作为熔断根据
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 15000 #断路器超时时间，默认1000ms
  compression:
    request:
      enabled: true
      mime-types[0]: text/xml
      mime-types[1]: application/xml
      mime-types[2]: application/json
      min-request-size: 2048
    response:
      enabled: true

zuul:
  retryable: true
  ignored-services: '*'
  add-host-header: true
  sensitive-headers: '*'
  routes:
    consumer:
      stripPrefix: false
      serviceId: consumer
      path: /consumer/**
    provider:
      stripPrefix: false
      serviceId: provider
      path: /provider/**
  host:
    connect-timeout-millis: 20000
    socket-timeout-millis: 20000   #socket超时

ribbon:                                                                                #设置ribbon的超时时间小于zuul的超时时间   网关不设置会造成1s就超时异常，其实真正控制的是在各个comsumer中。
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.AvailabilityFilteringRule
    ConnectTimeout: 10000
    ReadTimeout: 10000
    OkToRetryOnAllOperations: true
    MaxAutoRetriesNextServer: 10
    MaxAutoRetries: 1

